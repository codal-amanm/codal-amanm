<div class="page-width" id="cart-page">
  <h2 class="text-xl font-semibold text-gray-900 sm:text-2xl">Shopping Cart</h2>

  <div class="mt-6 sm:mt-8 md:gap-6 lg:flex lg:items-start xl:gap-8">
    <div class="w-full flex-none lg:max-w-2xl xl:max-w-5xl">
      <div class="space-y-6">
        {% for item in cart.items %}
          <div
            class="rounded-lg border border-gray-200 bg-white p-4 shadow-sm md:p-6 cardBox"
            id="{{ forloop.index }}"
          >
            <div
              class="space-y-4 md:flex md:items-center md:justify-between md:gap-6 md:space-y-0"
            >
              <a href="#" class="shrink-0 md:order-1">
                <img
                  class="h-60 w-60 rounded-xl"
                  src="{{ item.image | image_url: width: '400px'  }}"
                  alt="imac image"
                  width="400px"
                  height="400px"
                >
              </a>

              <label for="counter-input" class="sr-only">Choose quantity:</label>
              <div
                class="flex items-center justify-between md:order-3 md:justify-end"
              >
                <div class="flex items-center counterInput">
                  <button
                    type="button"

                    data-input-counter-decrement="counter-input"
                    class="decrement-button inline-flex h-5 w-5 shrink-0 items-center justify-center rounded-md border border-gray-300 bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-100"
                  >
                    <svg
                      class="h-2.5 w-2.5 text-gray-900"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 18 2"
                    >
                      <path
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M1 1h16"
                      />
                    </svg>
                  </button>
                  <input
                    type="text"

                    data-input-counter
                    class="counter-input w-10 shrink-0 border-0 bg-transparent text-center text-sm font-medium text-gray-900 !outline-none !ring-0"
                    placeholder=""
                    readonly
                    value="{{ item.quantity }}"
                    required
                  >
                  <button
                    type="button"

                    data-input-counter-increment="counter-input"
                    class="increment-button inline-flex h-5 w-5 shrink-0 items-center justify-center rounded-md border border-gray-300 bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-100"
                  >
                    <svg
                      class="h-2.5 w-2.5 text-gray-900"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 18 18"
                    >
                      <path
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 1v16M1 9h16"
                      />
                    </svg>
                  </button>
                </div>
                <div class="text-end md:order-4 md:w-32">
                  <p class="text-base font-bold text-gray-900">{{ item.final_line_price | money }}</p>
                </div>
              </div>

              <div class="w-full min-w-0 flex-1 space-y-4 md:order-2 md:max-w-md">
                <a
                  href="#"
                  class="text-base font-medium text-gray-900 hover:underline"
                >
                  {{- item.title -}}
                </a>

                <div class="flex items-center gap-4 mt-4">
                  <button
                    type="button"
                    class="inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-900 hover:underline"
                  >
                    <svg
                      class="me-1.5 h-5 w-5"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      fill="none"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M12.01 6.001C6.5 1 1 8 5.782 13.001L12.011 20l6.23-7C23 8 17.5 1 12.01 6.002Z"
                      />
                    </svg>
                    Add to Favorites
                  </button>

                  <button
                    type="button"
                    class="inline-flex items-center text-sm font-medium text-red-600 hover:underline remove-item"
                  >
                    <svg
                      class="me-1.5 h-5 w-5"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      fill="none"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M6 18 17.94 6M18 18 6.06 6"
                      />
                    </svg>
                    Remove
                  </button>
                </div>

                {% if item.properties != blank %}
                  {% for property in item.properties %}
                    {% if property.first != '_Last name' %}
                      <p class="text-xl">{{ property.first }} : {{ property.last }}</p>
                    {% endif -%}
                  {% endfor %}
                {% else %}
                  <p class="text-xl">No properties available</p>
                {% endif %}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>

    <div class="mx-auto mt-6 max-w-4xl flex-1 space-y-6 lg:mt-0 lg:w-full">
      <div
        class="space-y-4 rounded-lg border border-gray-200 bg-white p-4 shadow-sm sm:p-6"
      >
        <p class="text-xl font-semibold text-gray-900">Order summary</p>

        <div class="space-y-4">
          <div class="space-y-2">
            <dl class="flex items-center justify-between gap-4">
              <dt class="text-base font-normal text-gray-500">Original price</dt>
              <dd class="text-base font-medium text-gray-900">{{ cart.original_total_price | money }}</dd>
            </dl>

            <dl class="flex items-center justify-between gap-4">
              <dt class="text-base font-normal text-gray-500">Savings</dt>
              <dd class="text-base font-medium text-green-600">-{{ cart.total_discount | money }}</dd>
            </dl>

            <dl class="flex items-center justify-between gap-4">
              <dt class="text-base font-normal text-gray-500">Store Pickup</dt>
              <dd class="text-base font-medium text-gray-900">$99</dd>
            </dl>

            <dl class="flex items-center justify-between gap-4">
              <dt class="text-base font-normal text-gray-500">Tax</dt>
              <dd class="text-base font-medium text-gray-900">$799</dd>
            </dl>
          </div>

          <dl
            class="flex items-center justify-between gap-4 border-t border-gray-200 pt-2"
          >
            <dt class="text-base font-bold text-gray-900">Total</dt>
            <dd class="text-base font-bold text-gray-900">{{ cart.total_price | money }}</dd>
          </dl>
        </div>

        <a
          href="#"
          class="flex w-full items-center justify-center rounded-lg bg-primary-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-primary-800 focus:outline-none focus:ring-4 focus:ring-primary-300"
          >Proceed to Checkout</a
        >

        <div class="flex items-center justify-center gap-2">
          <span class="text-sm font-normal text-gray-500"> or </span>
          <a
            href="#"
            title=""
            class="inline-flex items-center gap-2 text-sm font-medium text-primary-700 underline hover:no-underline"
          >
            Continue Shopping
            <svg
              class="h-5 w-5"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 12H5m14 0-4 4m4-4-4-4"
              />
            </svg>
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
{% javascript %}
  document.addEventListener("DOMContentLoaded", function () {
    const counters = document.querySelectorAll('.counterInput');
    const cardBox = document.querySelectorAll('.cardBox');
    document.addEventListener("click", async function (event) {
        let button = event.target.closest(".increment-button, .decrement-button, .remove-item");
        if(!button) return;
        let lineValue = button.closest('.cardBox').getAttribute('id');
        console.log("lineValue", lineValue)
        if(button.classList.contains('increment-button')){
          let currentCount = button.closest(".counterInput").querySelector('.counter-input');
          currentCount.setAttribute('value', parseInt(currentCount.value) + 1);
          if (currentCount.value > 0) {
              button.closest(".counterInput").querySelector('.decrement-button').removeAttribute('disabled');
          }
          let formChangeData = {
            line: lineValue,
            quantity: currentCount.value,
            sections: 'cart-page',
          };
          SectionRender(formChangeData);
          console.log('formChangeData', formChangeData);
        } else if(button.classList.contains('decrement-button')) {
          let currentCount = button.closest(".counterInput").querySelector('.counter-input');
          console.log('currentCount.value',currentCount.value)
          currentCount.setAttribute('value', parseInt(currentCount.value) - 1);
          if (currentCount.value === 0) {
              button.closest(".counterInput").querySelector('.decrement-button').setAttribute('disabled', 'disabled');
          }
          let formChangeData = {
            line: lineValue,
            quantity: currentCount.value,
            sections: 'cart-page',
          };
          SectionRender(formChangeData);
          console.log('formChangeData', formChangeData);
        } else if(button.classList.contains('remove-item')) {
          let formChangeData = {
            line: lineValue,
            quantity: 0,
            sections: 'cart-page',
          };
           SectionRender(formChangeData);
          console.log('formChangeData', formChangeData);
        }
    })

    async function SectionRender(formChangeData) {
        await fetch('/cart/change.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formChangeData),
          })
          .then((response) => {
            return response.json();
          })
          .then((data) => {
            document.getElementById("cart-page").innerHTML = new DOMParser().parseFromString(data.sections["cart-page"], "text/html").querySelector("#cart-page").innerHTML;
          })
          .catch((error) => {
            console.error('Error:', error);
          });
        console.log('formDatafun', formChangeData);
      }

  });
{% endjavascript %}
{% schema %}
{ "name": "Cart Page", "tag": "section", "settings": [], "presets": [{ "name": "Cart Section" }] }
{% endschema %}
